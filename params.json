{"name":"Events","tagline":"","body":"UIR **EVENTS**\r\n===================\r\n\r\nEvent management application for the **International University of Rabat**\r\n\r\n---------------\r\n\r\nThe Team\r\n-----------\r\n\r\nLooking for additional team members.\r\n\r\n| Name     | Role  | Twitter| Email |\r\n| :------- | ----: | :----  | :---: |\r\n| EL AMRI Ali | Web Developer | @MrShoodey | shoodey@gmail.com |\r\n\r\n\r\n-------------------\r\n\r\nInstallation\r\n-------------\r\n\r\n> 1.  Download zip.\r\n> 2.  Modify `.env`.\r\n> 3.  Create  `events` database.\r\n> 4.  Launch terminal then `cd`into folder.\r\n> 5.  Run `npm install` *(requires nodejs & npm)*.\r\n> 6.  Run `composer install` or `composer update`.\r\n> 7.  Run `php artisan migrate`.\r\n> 8.  php `artisan db:seed` to populate tables.\r\n> 9.  Run your local server.\r\n> 10.  Log in using `admin@uir-events.com` & `admin` credentials couple.\r\n\r\n----------------------------\r\n\r\nCompleted Tasks\r\n--------------------\r\n\r\n[23/01/2016] List of completed tasks (non exhaustive)\r\n\r\n> **Registration:**\r\n> \r\n> * Users can register using (Full name, Email and Password).\r\n> * Welcome email is sent, notifying that an admin will shortly activate account.\r\n> \r\n> **Activation:**\r\n> \r\n> * An admin will activate the new user's account from a link sent to his email address.\r\n> * Only active account are allowed to log in and view the dashboard panel.\r\n> \r\n> **Login:**\r\n> \r\n> * Users can log in using (Email and Password)\r\n> * As mentioned above, only active account are allowed to log in and view the dashboard panel.\r\n>\r\n> **Lockscreen:**\r\n> \r\n> * When loging out, the user's session is locked, allowing him to simply re-login using only password.\r\n> * The user can also chose to login user a different account.\r\n>\r\n> **Password Reset**\r\n>\r\n> * If password is forgotten, the user can send a password reset request to his email address.\r\n> * The link will allow him to set a new password then login.\r\n> \r\n> **Toasts:**\r\n> \r\n> * The user is notified each time he performs a major action using [toastr](https://github.com/CodeSeven/toastr).\r\n> \r\n> **Emails:**\r\n>\r\n> * An email is sent to the user's email address each time he performs a major action.\r\n> * Email template is handled using [BeautyMail](https://github.com/Snowfire/Beautymail).\r\n> \r\n> **Roles & Permissions:**\r\n> \r\n> * Roles can be created in the fly.\r\n> * Each role is assigned to a specific set of users.\r\n> * Each role has a set of permissions.\r\n> * An `admin` role is assigned to the application administrator, providing a full access.\r\n> \r\n> **Breadcrumbs:**\r\n> \r\n> * Breadcrumbs are used to help the user locate himself, using [Laravel Breadcrumbs](https://github.com/davejamesmiller/laravel-breadcrumbs)\r\n> \r\n> **Bug Reports:**\r\n> \r\n> * On any page, the user can click the `lady bug` button and send a request to the administrator containing issues encountered.\r\n\r\n----------\r\n\r\nTODO\r\n-------\r\n\r\n\r\n> **Notifications:**\r\n>\r\n> * Manage notifications using [notifynder](https://github.com/fenos/Notifynder).\r\n>\r\n> **Entities:**\r\n>\r\n> * Create entities which will regroup users under the same function (Community Managers, Club Presidents, Poles Assistants...)\r\n\r\n-----------","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}